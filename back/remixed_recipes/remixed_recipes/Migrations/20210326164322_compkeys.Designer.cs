// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using remixed_recipes.Data;

namespace remixed_recipes.Migrations
{
    [DbContext(typeof(ApiDBContext))]
    [Migration("20210326164322_compkeys")]
    partial class compkeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("remixed_recipes.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id", "Name");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("remixed_recipes.Models.Instructions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("InstructionsText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId")
                        .IsUnique();

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("remixed_recipes.Models.Preparation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id", "Description");

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("remixed_recipes.Models.Quantity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id", "Name");

                    b.ToTable("Quantities");
                });

            modelBuilder.Entity("remixed_recipes.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("remixed_recipes.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("IngredientId")
                        .HasColumnType("integer");

                    b.Property<int>("IngredientId1")
                        .HasColumnType("integer");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreparationDescription")
                        .HasColumnType("text");

                    b.Property<int?>("PreparationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PreparationId1")
                        .HasColumnType("integer");

                    b.Property<int>("QuantityId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantityId1")
                        .HasColumnType("integer");

                    b.Property<string>("QuantityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnitId1")
                        .HasColumnType("integer");

                    b.Property<string>("UnitName")
                        .HasColumnType("text");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId1", "IngredientName");

                    b.HasIndex("PreparationId1", "PreparationDescription");

                    b.HasIndex("QuantityId1", "QuantityName");

                    b.HasIndex("UnitId1", "UnitName");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("remixed_recipes.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id", "Name");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("remixed_recipes.Models.Instructions", b =>
                {
                    b.HasOne("remixed_recipes.Models.Recipe", "Recipe")
                        .WithOne("Instructions")
                        .HasForeignKey("remixed_recipes.Models.Instructions", "RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("remixed_recipes.Models.RecipeIngredient", b =>
                {
                    b.HasOne("remixed_recipes.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("remixed_recipes.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId1", "IngredientName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("remixed_recipes.Models.Preparation", "Preparation")
                        .WithMany()
                        .HasForeignKey("PreparationId1", "PreparationDescription");

                    b.HasOne("remixed_recipes.Models.Quantity", "Quantity")
                        .WithMany()
                        .HasForeignKey("QuantityId1", "QuantityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("remixed_recipes.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId1", "UnitName");
                });
#pragma warning restore 612, 618
        }
    }
}
